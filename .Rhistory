server <- function(input, output) {
output$heading <- renderUI({
return(h1("Welcome"))
})
## HEALTH ISSUE PLOT
output$Graphs <- renderPlot({
if (input$HealthIssues == "Hypertension") {
hypertension_plot <- ggplot(full_hypertension, aes(fill=Country, y=Total, x=Hypertension)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Hypertension")
print(hypertension_plot)
} else if(input$HealthIssues == "BP") {
bp_plot <- ggplot(full_bp, aes(fill=Country, y=Total, x=BP)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Blood Pressure")
print(bp_plot)
} else {
diabetes_plot <- ggplot(full_diabetes, aes(fill=Country, y=Total, x=Diabetes)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Diabetes")
print(diabetes_plot)
}
})
## BACKGROUND (FRONT PAGE) TEXT
output$BackInfo <- renderText({
return(
"WELCOME"
)
})
## TITLE WHEN YOU OPEN HEALTH ISSUES
output$bghtml <- renderUI({
return(h1("America VS Japan"))
})
## SUB-TEXT OF HEALTH ISSUES
output$bgtext <- renderText({
return("")
})
output$table <- renderTable({
return(japan_fun_data)
})
}
################################################################################################################################################
## Running SHINY
shinyApp(ui, server)
################################################################################################################################################
## SERVER CODE
server <- function(input, output) {
output$heading <- renderUI({
return(h1("Welcome"))
})
## HEALTH ISSUE PLOT
output$Graphs <- renderPlot({
if (input$HealthIssues == "Hypertension") {
hypertension_plot <- ggplot(full_hypertension, aes(fill=Country, y=Total, x=Hypertension)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Hypertension")
print(hypertension_plot)
} else if(input$HealthIssues == "BP") {
bp_plot <- ggplot(full_bp, aes(fill=Country, y=Total, x=BP)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Blood Pressure")
print(bp_plot)
} else {
diabetes_plot <- ggplot(full_diabetes, aes(fill=Country, y=Total, x=Diabetes)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Diabetes")
print(diabetes_plot)
}
})
## BACKGROUND (FRONT PAGE) TEXT
output$BackInfo <- renderText({
return(
"WELCOME"
)
})
## TITLE WHEN YOU OPEN HEALTH ISSUES
output$bghtml <- renderUI({
return(h1("America VS Japan"))
})
## SUB-TEXT OF HEALTH ISSUES
output$bgtext <- renderText({
return("")
})
output$table <- renderTable({
print(japan_fun_data)
})
}
################################################################################################################################################
## Running SHINY
shinyApp(ui, server)
################################################################################################################################################
## SERVER CODE
server <- function(input, output) {
output$heading <- renderUI({
return(h1("Welcome"))
})
## HEALTH ISSUE PLOT
output$Graphs <- renderPlot({
if (input$HealthIssues == "Hypertension") {
hypertension_plot <- ggplot(full_hypertension, aes(fill=Country, y=Total, x=Hypertension)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Hypertension")
print(hypertension_plot)
} else if(input$HealthIssues == "BP") {
bp_plot <- ggplot(full_bp, aes(fill=Country, y=Total, x=BP)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Blood Pressure")
print(bp_plot)
} else {
diabetes_plot <- ggplot(full_diabetes, aes(fill=Country, y=Total, x=Diabetes)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Diabetes")
print(diabetes_plot)
}
})
## BACKGROUND (FRONT PAGE) TEXT
output$BackInfo <- renderText({
return(
"WELCOME"
)
})
## TITLE WHEN YOU OPEN HEALTH ISSUES
output$bghtml <- renderUI({
return(h1("America VS Japan"))
})
## SUB-TEXT OF HEALTH ISSUES
output$bgtext <- renderText({
return("")
})
output$table <- renderTable({
print(ifelse(japan_fun_data))
})
}
################################################################################################################################################
## Running SHINY
shinyApp(ui, server)
typeof(japan_fun_data)
as.data.frame(japan_fun_data)
typeof(japan_fun_data)
data.frame(japan_fun_data)
typeof(japan_fun_data)
ui <- fluidPage(
theme = "bootstrap.css",
## TITLE OF SHINY
titlePanel("USA VS JAPAN"),
## WIDGET PANNEL
sidebarLayout(
sidebarPanel(
selectInput(
inputId = 'HealthIssues',
label = 'Health Issues',
choices = Issues
)
),
## ACTUAL PANEL (RIGHT)
mainPanel(
tabsetPanel(
id = "tabset",
type = "tabs",
## WHEN YOU OPEN PANEL
tabPanel(
"Background Information",
htmlOutput("heading"),
textOutput("BackInfo"),
dataTableOutput('table')
),
## HEALTH ISSUE PANNEL
tabPanel(
"Health Issues",
htmlOutput("bghtml"),
textOutput("bgtext"),
plotOutput("Graphs")
)
)
)
)
)
################################################################################################################################################
## SERVER CODE
server <- function(input, output) {
output$heading <- renderUI({
return(h1("Welcome"))
})
## HEALTH ISSUE PLOT
output$Graphs <- renderPlot({
if (input$HealthIssues == "Hypertension") {
hypertension_plot <- ggplot(full_hypertension, aes(fill=Country, y=Total, x=Hypertension)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Hypertension")
print(hypertension_plot)
} else if(input$HealthIssues == "BP") {
bp_plot <- ggplot(full_bp, aes(fill=Country, y=Total, x=BP)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Blood Pressure")
print(bp_plot)
} else {
diabetes_plot <- ggplot(full_diabetes, aes(fill=Country, y=Total, x=Diabetes)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Diabetes")
print(diabetes_plot)
}
})
## BACKGROUND (FRONT PAGE) TEXT
output$BackInfo <- renderText({
return(
"WELCOME"
)
})
## TITLE WHEN YOU OPEN HEALTH ISSUES
output$bghtml <- renderUI({
return(h1("America VS Japan"))
})
## SUB-TEXT OF HEALTH ISSUES
output$bgtext <- renderText({
return("")
})
output$table <- renderDataTable(japan_fun_data)
}
################################################################################################################################################
## Running SHINY
shinyApp(ui, server)
ui <- fluidPage(
theme = "bootstrap.css",
## TITLE OF SHINY
titlePanel("USA VS JAPAN"),
## WIDGET PANNEL
sidebarLayout(
sidebarPanel(
selectInput(
inputId = 'HealthIssues',
label = 'Health Issues',
choices = Issues
)
),
## ACTUAL PANEL (RIGHT)
mainPanel(
tabsetPanel(
id = "tabset",
type = "tabs",
## WHEN YOU OPEN PANEL
tabPanel(
"Background Information",
htmlOutput("heading"),
textOutput("BackInfo"),
tableOutput('table')
),
## HEALTH ISSUE PANNEL
tabPanel(
"Health Issues",
htmlOutput("bghtml"),
textOutput("bgtext"),
plotOutput("Graphs")
)
)
)
)
)
################################################################################################################################################
## SERVER CODE
server <- function(input, output) {
output$heading <- renderUI({
return(h1("Welcome"))
})
## HEALTH ISSUE PLOT
output$Graphs <- renderPlot({
if (input$HealthIssues == "Hypertension") {
hypertension_plot <- ggplot(full_hypertension, aes(fill=Country, y=Total, x=Hypertension)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Hypertension")
print(hypertension_plot)
} else if(input$HealthIssues == "BP") {
bp_plot <- ggplot(full_bp, aes(fill=Country, y=Total, x=BP)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Blood Pressure")
print(bp_plot)
} else {
diabetes_plot <- ggplot(full_diabetes, aes(fill=Country, y=Total, x=Diabetes)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Diabetes")
print(diabetes_plot)
}
})
## BACKGROUND (FRONT PAGE) TEXT
output$BackInfo <- renderText({
return(
"WELCOME"
)
})
## TITLE WHEN YOU OPEN HEALTH ISSUES
output$bghtml <- renderUI({
return(h1("America VS Japan"))
})
## SUB-TEXT OF HEALTH ISSUES
output$bgtext <- renderText({
return("")
})
output$table <- renderTable(japan_fun_data)
}
################################################################################################################################################
## Running SHINY
shinyApp(ui, server)
output$table <- renderTable(japan_data2013)
################################################################################################################################################
## SERVER CODE
server <- function(input, output) {
output$heading <- renderUI({
return(h1("Welcome"))
})
## HEALTH ISSUE PLOT
output$Graphs <- renderPlot({
if (input$HealthIssues == "Hypertension") {
hypertension_plot <- ggplot(full_hypertension, aes(fill=Country, y=Total, x=Hypertension)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Hypertension")
print(hypertension_plot)
} else if(input$HealthIssues == "BP") {
bp_plot <- ggplot(full_bp, aes(fill=Country, y=Total, x=BP)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Blood Pressure")
print(bp_plot)
} else {
diabetes_plot <- ggplot(full_diabetes, aes(fill=Country, y=Total, x=Diabetes)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Diabetes")
print(diabetes_plot)
}
})
## BACKGROUND (FRONT PAGE) TEXT
output$BackInfo <- renderText({
return(
"WELCOME"
)
})
## TITLE WHEN YOU OPEN HEALTH ISSUES
output$bghtml <- renderUI({
return(h1("America VS Japan"))
})
## SUB-TEXT OF HEALTH ISSUES
output$bgtext <- renderText({
return("")
})
output$table <- renderTable(japan_data2013)
}
################################################################################################################################################
## Running SHINY
shinyApp(ui, server)
output$table <- renderTable(japan_filtered_data)
################################################################################################################################################
## Running SHINY
shinyApp(ui, server)
View(japan_fun_data)
japan_fun_data <- merge(midnight_snack, enough_sleep)
View(japan_fun_data)
##########################################################################################
# FUN FACTS TAB
japan_human_data <-
japan_data2013 %>%
select(`Age`, `Height`, `Weight`
)
japan_fun_data <-
japan_data2013 %>%
select(`Midnight snack-category`, `Enough sleep`
)
japan_fun_data[japan_fun_data == "1.0"] <- "Yes"
japan_fun_data[japan_fun_data== "2.0"] <- "No"
japan_fun_data[japan_fun_data == "NA"] <- NA
midnight_snack <- table(japan_fun_data$`Midnight snack-category`)
midnight_snack <- as.data.frame(midnight_snack)
enough_sleep <- table(japan_fun_data$`Enough sleep`)
enough_sleep <- as.data.frame(enough_sleep)
colnames(midnight_snack) <- c("Midnight", "Total")
colnames(enough_sleep) <- c("Sleep", "Total")
japan_fun_data <- merge(midnight_snack, enough_sleep)
View(japan_fun_data)
View(midnight_snack)
japan_fun_data <- melt(midnight_snack, enough_sleep)
japan_fun_data <- full_join(midnight_snack, enough_sleep)
View(japan_fun_data)
################################################################################################################################################
## SERVER CODE
server <- function(input, output) {
output$heading <- renderUI({
return(h1("Welcome"))
})
## HEALTH ISSUE PLOT
output$Graphs <- renderPlot({
if (input$HealthIssues == "Hypertension") {
hypertension_plot <- ggplot(full_hypertension, aes(fill=Country, y=Total, x=Hypertension)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Hypertension")
print(hypertension_plot)
} else if(input$HealthIssues == "BP") {
bp_plot <- ggplot(full_bp, aes(fill=Country, y=Total, x=BP)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Blood Pressure")
print(bp_plot)
} else {
diabetes_plot <- ggplot(full_diabetes, aes(fill=Country, y=Total, x=Diabetes)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Diabetes")
print(diabetes_plot)
}
})
## BACKGROUND (FRONT PAGE) TEXT
output$BackInfo <- renderText({
return(
"WELCOME"
)
})
## TITLE WHEN YOU OPEN HEALTH ISSUES
output$bghtml <- renderUI({
return(h1("America VS Japan"))
})
## SUB-TEXT OF HEALTH ISSUES
output$bgtext <- renderText({
return("")
})
output$table <- renderTable(japan_fun_data)
}
################################################################################################################################################
## Running SHINY
shinyApp(ui, server)
################################################################################################################################################
## Running SHINY
shinyApp(ui, server)
################################################################################################################################################
## Running SHINY
shinyApp(ui, server)
ui <- fluidPage(
theme = "bootstrap.css",
## TITLE OF SHINY
titlePanel("USA VS JAPAN"),
## WIDGET PANNEL
sidebarLayout(
sidebarPanel(
selectInput(
inputId = 'HealthIssues',
label = 'Health Issues',
choices = Issues
)
),
## ACTUAL PANEL (RIGHT)
mainPanel(
tabsetPanel(
id = "tabset",
type = "tabs",
## WHEN YOU OPEN PANEL
tabPanel(
"Background Information",
htmlOutput("heading"),
textOutput("BackInfo")
),
## HEALTH ISSUE PANNEL
tabPanel(
"Health Issues",
htmlOutput("bghtml"),
textOutput("bgtext"),
plotOutput("Graphs")
)
)
)
)
)
################################################################################################################################################
## SERVER CODE
server <- function(input, output) {
output$heading <- renderUI({
return(h1("Welcome"))
})
## HEALTH ISSUE PLOT
output$Graphs <- renderPlot({
if (input$HealthIssues == "Hypertension") {
hypertension_plot <- ggplot(full_hypertension, aes(fill=Country, y=Total, x=Hypertension)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Hypertension")
print(hypertension_plot)
} else if(input$HealthIssues == "BP") {
bp_plot <- ggplot(full_bp, aes(fill=Country, y=Total, x=BP)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Blood Pressure")
print(bp_plot)
} else {
diabetes_plot <- ggplot(full_diabetes, aes(fill=Country, y=Total, x=Diabetes)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Diabetes")
print(diabetes_plot)
}
})
## BACKGROUND (FRONT PAGE) TEXT
output$BackInfo <- renderText({
return(
"WELCOME"
)
})
## TITLE WHEN YOU OPEN HEALTH ISSUES
output$bghtml <- renderUI({
return(h1("America VS Japan"))
})
## SUB-TEXT OF HEALTH ISSUES
output$bgtext <- renderText({
return("")
})
}
################################################################################################################################################
## Running SHINY
shinyApp(ui, server)
################################################################################################################################################
## Running SHINY
shinyApp(ui, server)
################################################################################################################################################
## Running SHINY
shinyApp(ui, server)
