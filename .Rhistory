}
}
}
## Get Rid of Scientific Notations
options(scipen=999)
## Combined Data (Three CSVs)
combined_data <- merge(death_data, ylds_data)
combined_data <- merge(combined_data, expectancy_data)
## Change NA's to 0's
combined_data[is.na(combined_data)] <- 0
# Calculations for DALYS + YLLS:
combined_data$ylls <- combined_data$deaths * combined_data$life.expectancy
combined_data$dalys <- combined_data$ylls + combined_data$ylds
# Burden of CAUSE
cause_data <- combined_data
## Aggregate the Data
cause_data <- cause_data %>%
group_by(cause_name) %>%
summarize(deaths = sum(deaths), ylds = sum(ylds), dalys = sum(dalys), ylls = sum(ylls))
names(cause_data) <- c("Cause", "Deaths", "YLDS", "DALYS", "YLLS")
cause_data <- cause_data[c("Cause", "Deaths", "YLLS", "YLDS", "DALYS")]
## Create Table with 15 on each page
DT::datatable(cause_data, options = list(pageLength = 15))
# Burden of AGE
age_data <- combined_data
## Aggregate the AGE Data
age_data <- age_data %>%
group_by(age) %>%
summarize(deaths = sum(deaths), ylds = sum(ylds), dalys = sum(dalys), ylls = sum(ylls))
## Two Plots
age_plot1 <- ggplot(age_data, aes(x = age, y = ylls)) +
geom_point(aes(colour = age)) +
theme(legend.position="none", axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("YLLS In Each Age Group") +
xlab("Age Groups") +
ylab("Number Of YLLS")
age_plot2 <- ggplot(age_data, aes(x = age, y = deaths)) +
geom_point(aes(colour = age)) +
theme(legend.position="none", axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Deaths In Each Age Groups") +
xlab("Age Groups") +
ylab("Number Of Deaths")
## MultiPlot at Once
multiplot(age_plot1, age_plot2, cols = 1)
# Burden of SEX
sex_data <- combined_data
## Aggregate the SEX Dataset
sex_data <- sex_data %>%
group_by(sex) %>%
summarize(deaths = sum(deaths), ylds = sum(ylds), dalys = sum(dalys), ylls = sum(ylls))
## Plots
sex_plot1 <- ggplot(data=sex_data, aes(x=sex, y=deaths)) +
geom_bar(stat="identity", fill="red")+
geom_text(aes(label=deaths), vjust=1.6, color="white", size=2.5)+
theme_minimal() +
ggtitle("Deaths of Genders") +
xlab("Gender") +
ylab("Number Of Deaths")
sex_plot2 <- ggplot(data=sex_data, aes(x=sex, y=dalys)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=dalys), vjust=1.6, color="white", size=2.5)+
theme_minimal() +
ggtitle("Impact of DALYS On Genders") +
xlab("Gender") +
ylab("Number Of DALYS")
## Plot Graphs on same Visualization
multiplot(sex_plot1, sex_plot2, cols = 2)
# Load Data
death_data <- read.csv('data/deaths.csv')
expectancy_data <- read.csv('data/life_expectancy.csv')
ylds_data <- read.csv('data/ylds.csv')
## Multiplot Function
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
require(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
## Get Rid of Scientific Notations
options(scipen=999)
## Combined Data (Three CSVs)
combined_data <- merge(death_data, ylds_data)
combined_data <- merge(combined_data, expectancy_data)
## Change NA's to 0's
combined_data[is.na(combined_data)] <- 0
# Calculations for DALYS + YLLS:
combined_data$ylls <- combined_data$deaths * combined_data$life.expectancy
combined_data$dalys <- combined_data$ylls + combined_data$ylds
# Burden of CAUSE
cause_data <- combined_data
## Aggregate the Data
cause_data <- cause_data %>%
group_by(cause_name) %>%
summarize(deaths = sum(deaths), ylds = sum(ylds), dalys = sum(dalys), ylls = sum(ylls))
names(cause_data) <- c("Cause", "Deaths", "YLDS", "DALYS", "YLLS")
cause_data <- cause_data[c("Cause", "Deaths", "YLLS", "YLDS", "DALYS")]
## Create Table with 15 on each page
DT::datatable(cause_data, options = list(pageLength = 15))
# Burden of AGE
age_data <- combined_data
## Aggregate the AGE Data
age_data <- age_data %>%
group_by(age) %>%
summarize(deaths = sum(deaths), ylds = sum(ylds), dalys = sum(dalys), ylls = sum(ylls))
## Two Plots
age_plot1 <- ggplot(age_data, aes(x = age, y = ylls)) +
geom_point(aes(colour = age)) +
theme(legend.position="none", axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("YLLS In Each Age Group") +
xlab("Age Groups") +
ylab("Number Of YLLS")
age_plot2 <- ggplot(age_data, aes(x = age, y = deaths)) +
geom_point(aes(colour = age)) +
theme(legend.position="none", axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Deaths In Each Age Groups") +
xlab("Age Groups") +
ylab("Number Of Deaths")
## MultiPlot at Once
multiplot(age_plot1, age_plot2, cols = 1)
# Load Data
death_data <- read.csv('data/deaths.csv')
expectancy_data <- read.csv('data/life_expectancy.csv')
ylds_data <- read.csv('data/ylds.csv')
## Multiplot Function
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
require(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
## Get Rid of Scientific Notations
options(scipen=999)
## Combined Data (Three CSVs)
combined_data <- merge(death_data, ylds_data)
combined_data <- merge(combined_data, expectancy_data)
## Change NA's to 0's
combined_data[is.na(combined_data)] <- 0
# Calculations for DALYS + YLLS:
combined_data$ylls <- combined_data$deaths * combined_data$life.expectancy
combined_data$dalys <- combined_data$ylls + combined_data$ylds
# Burden of CAUSE
cause_data <- combined_data
## Aggregate the Data
cause_data <- cause_data %>%
group_by(cause_name) %>%
summarize(deaths = sum(deaths), ylds = sum(ylds), dalys = sum(dalys), ylls = sum(ylls))
names(cause_data) <- c("Cause", "Deaths", "YLDS", "DALYS", "YLLS")
cause_data <- cause_data[c("Cause", "Deaths", "YLLS", "YLDS", "DALYS")]
## Create Table with 15 on each page
DT::datatable(cause_data, options = list(pageLength = 15))
# Burden of AGE
age_data <- combined_data
## Aggregate the AGE Data
age_data <- age_data %>%
group_by(age) %>%
summarize(deaths = sum(deaths), ylds = sum(ylds), dalys = sum(dalys), ylls = sum(ylls))
## Two Plots
age_plot1 <- ggplot(age_data, aes(x = age, y = ylls)) +
geom_point(aes(colour = age)) +
theme(legend.position="none", axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("YLLS In Each Age Group") +
xlab("Age Groups") +
ylab("Number Of YLLS")
## MultiPlot at Once
multiplot(age_plot1, age_plot2, cols = 1)
## Two Plots
age_plot1 <- ggplot(age_data, aes(x = age, y = ylls)) +
geom_point(aes(colour = age)) +
theme(legend.position="none", axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("YLLS In Each Age Group") +
xlab("Age Groups") +
ylab("Number Of YLLS")
age_plot2 <- ggplot(age_data, aes(x = age, y = deaths)) +
geom_point(aes(colour = age)) +
theme(legend.position="none", axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Deaths In Each Age Groups") +
xlab("Age Groups") +
ylab("Number Of Deaths")
## MultiPlot at Once
multiplot(age_plot1, age_plot2, cols = 1)
# Burden of SEX
sex_data <- combined_data
## Aggregate the SEX Dataset
sex_data <- sex_data %>%
group_by(sex) %>%
summarize(deaths = sum(deaths), ylds = sum(ylds), dalys = sum(dalys), ylls = sum(ylls))
sex_plot2 <- ggplot(data=sex_data, aes(x=sex, y=dalys)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=dalys), vjust=1.6, color="white", size=2.5)+
theme_minimal() +
ggtitle("Impact of DALYS On Genders") +
xlab("Gender") +
ylab("Number Of DALYS")
## Plot Graphs on same Visualization
multiplot(sex_plot1, sex_plot2, cols = 2)
install.packages("pander")
library(pander)
## Create Table with 15 on each page
pander::pander(cause_data, big.mark = ',')
DT::datatable(cause_data, options = list(pageLength = 15))
library(plotly)
gg <- ggplotly(age_plot1, age_plot2)
gg <- ggplotly(age_plot1)
## MultiPlot at Once
multiplot(age_plot1, age_plot2, cols = 1)
gg <- ggplotly(age_plot1)
gg
## Two Plots
age_plot1 <- ggplot(age_data, aes(x = age, y = ylls)) +
theme(legend.position="none", axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("YLLS In Each Age Group") +
xlab("Age Groups") +
ylab("Number Of YLLS")
gg1 <- ggplotly(age_plot1)
gg1
gg2 <- ggplotly(age_plot2)
## MultiPlot at Once
multiplot(gg1, gg2, cols = 1)
gg1 <- ggplotly(age_plot1)
gg2 <- ggplotly(age_plot2)
## MultiPlot at Once
multiplot(gg1, gg2, cols = 1)
gg1 <- ggplotly(age_plot1)
gg1
## Two Plots
age_plot1 <- ggplot(age_data, aes(x = age, y = ylls)) +
geom_point(aes(colour = age)) +
theme(legend.position="none", axis.text.x = element_text(angle = 45, hjust = )) +
ggtitle("YLLS In Each Age Group") +
xlab("Age Groups") +
ylab("Number Of YLLS")
age_plot2 <- ggplot(age_data, aes(x = age, y = deaths)) +
geom_point(aes(colour = age)) +
theme(legend.position="none", axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Deaths In Each Age Groups") +
xlab("Age Groups") +
ylab("Number Of Deaths")
## MultiPlot at Once
multiplot(age_plot1, age_plot2, cols = 1)
ggplotly(age_plot1, tooltip="age")
ggplotly(age_plot1, tooltip="ylls")
age_plot2 <- ggplotly(age_plot2, tooltip="deaths")
## MultiPlot at Once
multiplot(age_plot1, age_plot2, cols = 1)
data(BCG)
library(MASS)
############################################################################################################################################
# Set Up
library(dplyr)
data(BCG)
data
data()
install.packages(HSAUR)
install.packages("HSAUR")
data(BCG)
data()
install.packages("EPI")
version
version
install.packages("EPI")
install.packages("Epi")
install.packages("Hsaur")
install.packages("HSAUR")
data(HSAUR)
data(BCG)
data()
data(bdendo)
data(birthwt)
data("BCG")
data("birthwt")
install.packages(c("dplyr", "HSAUR"))
# Data Libraries
library(MASS)
library(HSAUR)
library(Epi)
data("BCG")
data("birthwt")
endometrial_data <- data("bdendo")
birth_weight_data <- data("birthwt")
bcg_data <- data("BCG")
bcg_data <- data("BCG")
birth_weight_data <- data("birthwt")
endometrial_data <- data("bdendo")
bcg_data
bcg_data <- data(BCG)
bcg_data
bcg_data <- data(BCG)
View(bcg_data)
birth_weight_data <- data(birthwt)
birth_weight_data
endometrial_data <- data(bdendo)
endometrial_data
data()
birth_weight_data <- data(birthwt)
head(birth_weight_data)
birth_weight_data <- data("birthwt")
head(birth_weight_data)
data("birthwt")
head(birthwt)
lala <- data("birthwt")
head(lala)
data("birthwt")
head(birthdeathrates)
head(birthwt)
View(birthwt)
data("BCG")
data("bdendo")
View(bdendo)
data("BCG")
View(BCG)
View(birthwt)
install.packages(c("dplyr", "DT", "formattable", "ggplot2", "ggrepel", "knitr", "plotly", "tidyverse"))
View(BCG)
data("BCG", package = "HSAUR")
boxplot(BCG$BCGTB/BCG$BCGVacc, BCG$NoVaccTB/BCG$NoVacc,
names = c("BCG Vaccination", "No Vaccination"),
ylab = "Percent BCG cases")
############################################################################################################################################
# Tuberculosis
## Pre-Calculations
example <- birthwt
example
############################################################################################################################################
# Tuberculosis
## Pre-Calculations
example <- BCG
example
example$NoVaccNoTB <- example$NoVacc - example$NoVaccTB
View(example)
example$BCGNoTB <- example$BCGVacc - example$BCGTB
View(example)
example$TBCalculation <- BCGTB / NoVacc
example$noTBCalculation <- BCGNoTB / NoVaccNoTB
example$TBCalculation <- example$BCGTB / example$NoVacc
example$noTBCalculation <- example$BCGNoTB / example$NoVaccNoTB
View(example)
example$TBCalculation <- example$BCGTB / example$NoVaccTB
View(example)
data("BCG")
data("birthwt")
data("bdendo")
View(BCG)
############################################################################################################################################
# Tuberculosis
## Pre-Calculations
BCG_Odds <- BCG
View(BCG_Odds )
BCG_Odds $NoVaccNoTB <- BCG_Odds $NoVacc - BCG_Odds NoVaccTB
BCG_Odds $BCGNoTB <- BCG_Odds $BCGVacc - BCG_Odds $BCGTB
BCG_Odds $TBCalculation <- BCG_Odds $BCGTB / BCG_Odds $NoVaccTB
BCG_Odds $noTBCalculation <- BCG_Odds $BCGNoTB / BCG_Odds $NoVaccNoTB
BCG_Odds $NoVaccNoTB <- BCG_Odds $NoVacc - BCG_Odds NoVaccTB
BCG_Odds $NoVaccNoTB <- BCG_Odds$NoVacc - BCG_Odds$NoVaccTB
BCG_Odds $BCGNoTB <- BCG_Odds$BCGVacc - BCG_Odds$BCGTB
BCG_Odds $TBCalculation <- BCG_Odds$BCGTB / BCG_Odds$NoVaccTB
BCG_Odds $noTBCalculation <- BCG_Odds$BCGNoTB / BCG_Odds$NoVaccNoTB
View(BCG_Odds )
View(BCG_Odds )
data("BCG")
data("birthwt")
data("bdendo")
############################################################################################################################################
# Tuberculosis
## Pre-Calculations
BCG_Odds <- BCG
BCG_Odds $NoVaccNoTB <- BCG_Odds$NoVacc - BCG_Odds$NoVaccTB
BCG_Odds $BCGNoTB <- BCG_Odds$BCGVacc - BCG_Odds$BCGTB
BCG_Odds $TBCalculation <- BCG_Odds$BCGTB / BCG_Odds$NoVaccTB
BCG_Odds $noTBCalculation <- BCG_Odds$BCGNoTB / BCG_Odds$NoVaccNoTB
View(BCG_Odds )
data("BCG")
data("birthwt")
data("bdendo")
############################################################################################################################################
# Tuberculosis
## Pre-Calculations
BCG_Odds <- BCG
BCG_Odds$NoVaccNoTB <- BCG_Odds$NoVacc - BCG_Odds$NoVaccTB
BCG_Odds$BCGNoTB <- BCG_Odds$BCGVacc - BCG_Odds$BCGTB
BCG_Odds$TBCalculation <- BCG_Odds$BCGTB / BCG_Odds$NoVaccTB
BCG_Odds$noTBCalculation <- BCG_Odds$BCGNoTB / BCG_Odds$NoVaccNoTB
View(BCG_Odds)
BCG_Odds$ratio <- BCG_Odds$noTBCalculation / BCG_Odds$TBCalculation
View(BCG_Odds)
boxplot(BCG$BCGTB / BCG$BCGVacc, BCG$NoVaccTB / BCG$NoVacc,
names = c("BCG Vaccination", "No Vaccination"),
ylab = "Percent BCG cases")
adjusted_unadjusted_plot <- ggplot(data = BCG_Odds, aes(BCG_Odds$ratio)) +
geom_histogram(binwidth = 0.1) +
ggtitle("Ratio of Adjusted VS Unadjusted") +
ylab("Values") +
xlab("Ratio")
library(ggplot2)
adjusted_unadjusted_plot <- ggplot(data = BCG_Odds, aes(BCG_Odds$ratio)) +
geom_histogram(binwidth = 0.1) +
ggtitle("Ratio of Adjusted VS Unadjusted") +
ylab("Values") +
xlab("Ratio")
adjusted_unadjusted_plot
ratio_plot <- ggplot(data = BCG_Odds, aes(BCG_Odds$ratio)) +
geom_histogram(binwidth = 0.1) +
ggtitle("ODD") +
ylab("Values") +
xlab("Ratio")
BCG_Odds$ratio <- BCG_Odds$TBCalculation / BCG_Odds$noTBCalculation
View(BCG_Odds)
## RELATIVE Pre-Calculations
BCG_Relative <- BCG
## RELATIVE Pre-Calculations
BCG_Relative <- BCG
BCG_Relative$NoVaccNoTB <- BCG_Relative$NoVacc - BCG_Relative$NoVaccTB
BCG_Relative$BCGNoTB <- BCG_Relative$BCGVacc - BCG_Relative$BCGTB
BCG_Relative$noTBCalculation <- BCG_Relative$BCGNoTB / BCG_Relative$BCGVacc
BCG_Relative$TBCalculation <-
View(BCG_Relative)
BCG_Relative$noTBCalculation <- BCG_Relative$BCGTB / BCG_Relative$BCGVacc
BCG_Relative$TBCalculation <- BCG_Relative$NoVaccTB / NoVacc
BCG_Relative$TBCalculation <- BCG_Relative$NoVaccTB / BCG_Relative$NoVacc
View(BCG_Relative)
data("BCG")
data("birthwt")
data("bdendo")
## ODD Pre-Calculations
BCG_Odds <- BCG
BCG_Odds$NoVaccNoTB <- BCG_Odds$NoVacc - BCG_Odds$NoVaccTB
BCG_Odds$BCGNoTB <- BCG_Odds$BCGVacc - BCG_Odds$BCGTB
BCG_Odds$noTBCalculation <- BCG_Odds$BCGNoTB / BCG_Odds$NoVaccNoTB
BCG_Odds$TBCalculation <- BCG_Odds$BCGTB / BCG_Odds$NoVaccTB
BCG_Odds$Ratio <- BCG_Odds$TBCalculation / BCG_Odds$noTBCalculation
## RELATIVE Pre-Calculations
BCG_Relative <- BCG
BCG_Relative$NoVaccNoTB <- BCG_Relative$NoVacc - BCG_Relative$NoVaccTB
BCG_Relative$BCGNoTB <- BCG_Relative$BCGVacc - BCG_Relative$BCGTB
BCG_Relative$TBWithVacc <- BCG_Relative$BCGTB / BCG_Relative$BCGVacc
BCG_Relative$TBWithoutVacc <- BCG_Relative$NoVaccTB / BCG_Relative$NoVacc
BCG_Relative$Ratio <- TBWithVacc  / TBWithoutVacc
View(BCG_Relative)
BCG_Relative$Ratio <- BCG_Relative$TBWithVacc  / BCG_Relative$TBWithoutVacc
View(BCG_Relative)
BCG_Relative$Ratio <- BCG_Relative$TBWithoutVacc / BCG_Relative$TBWithVacc
View(BCG_Relative)
setwd("~/Desktop/INFO-478/Assignments/a2-YungTC22")
source("analysis.R")
# Tuberculosis
ratio_plot <- ggplot(data = BCG_Odds, aes(BCG_Odds$ratio)) +
geom_histogram(binwidth = 0.1) +
ggtitle("ODD") +
ylab("Values") +
xlab("Ratio")
ratio_plot
# Tuberculosis
ratio_plot <- ggplot(data = BCG_Odds, aes(BCG_Odds$Ratio)) +
geom_histogram(binwidth = 0.1) +
ggtitle("ODD") +
ylab("Values") +
xlab("Ratio")
ratio_plot
setwd("~/Desktop/INFO-478/info478-JPNLifestyle")
# 478 FINAL PROJECT (UI)
#######################################################################################################################################################################################
# LOAD LIBRARIES
library(shiny)
library(shinythemes)
library(lettercase)
library(RColorBrewer)
source("analysis.R")
runApp()
runApp()
